Question: https://leetcode.com/problems/shuffle-the-array/

class Solution {
    public int[] shuffle(int[] nums, int n) {
        int[] temp1 = new int[n];
        int[] temp2 = new int[n];
  
    System.arraycopy(nums,0,temp1,0,n);
    System.arraycopy(nums,n,temp2,0,n);
    int p = 0;
    int y = 0;
    for(int i = 0; i<2*n;i=i+2)
    {   
        nums[i] = temp1[p];
        p=p+1;
    }

    for(int j = 1; j < 2*n;j=j+2)
    {
        nums[j] = temp2[y];
        y=y+1;
    }

    return nums;

    }
}

/*BEST RUN-TIME MANAGEMENT CODE
class Solution {
    public int[] shuffle(int[] nums, int n) {
        int[] result = new int[nums.length];

        for (int i = 0; i < nums.length / 2; i++) {
            int x = nums[i];
            int y = nums[i + nums.length / 2];

            result[i * 2] = x;
            result[i * 2 + 1] = y;
        }
        
        return result;
    }
}

BEST MEMORY - MANAGEMENT CODE
class Solution {
    public int[] shuffle(int[] nums, int n) {
        int[] res=new int[nums.length];
        for(int i=0;i<n;i++){
            res[i*2]=nums[i];
            res[i*2+1]=nums[n+i];
        }
        return res;
    }
}

*/
